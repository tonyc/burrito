
/*
 * -------------------
 * -=> Global Settings
 * -------------------
 */

/* misc
   ---- */
@ bg.BurritoVersion = [BuRRiTo v0.50pre10 by TaCo];
@   bg.VersionReply = bg.BurritoVersion;
@     bg.SignOnTime = bg.SignOnTime ? bg.SignOnTime : time();
@            bg.Lag = 0;
@     bg.NoSaveFile = 0;
@          bg.Colon = [:];
@          bg.Brak1 = [\[];
@          bg.Brak2 = [\]];
@      bg.StartLoad = time();
@        bg.MesgNum = bg.MesgNum ? bg.MesgNum : 0;
@  bg.GoneStartTime = 0;
@      bg.JoinStack = [];
@     bg.ValidCtcps = [Clientinfo Dcc Echo ErrMsg Userinfo Version Ctcp Time Utc XDcc ZDcc];
@      bg.CtCpFuncs = [Ping Finger Zippy Op Invite Unban];
@          bg.Hosts = [.?? com edu gov net org];

/* user settings
   ------------- */
@           bv.u.UserMode = [];
@          bv.u.StatusBar = [\[%R-%1\]%T %@%N%*%#%C%+%A%F%Q%H%B%S%O%M %>| %0%2%3%4%5%6];
@        bv.u.InputPrompt = [$$T>];
@        bv.u.FwinGrowNum = bv.u.FwinGrowNum ? bv.u.FwinGrowNum : LINES / 6;
if (bv.u.FwinGrowNum < 1) {@ bv.u.FwinGrowNum = 10}
@           bv.u.OVshrnum = 6;
@         bv.u.NormalNick = N;
@         bv.u.BackupNick = @N==9 ? [$[8]N-] : [$N-];
@    bv.u.CompletionList1 = [Null Msg Dm J Join L Leave NetS NetScape NetSS NetScapeStart Lynx Snarf Server];
@    bv.u.CompletionList2 = [Ar Msg Msg Chan Chan Chan Chan Url Url Url Url Url Url Servers];
@           bv.u.Xdisplay = [localhost:0.0];
@    bv.u.NetScapeOptions = [];
@        bv.u.LynxOptions = [];
@            bv.u.LynxCmd = [export TERM=console\;doprog /dev/tty11];
@ bv.u.DefaultFriendLevel = [Oiunphfc];
@   bv.u.DefaultShitLevel = [a];
@           bv.cl.Servers = [irc.blackened.com irc.cris.com irc.eskimo.com irc.neosoft.com irc.portal.com irc.primenet.com irc.winternet.com seltzer.csua.berkeley.edu irc.ecn.bgu.edu cs-pub.bu.edu azure.acsu.buffalo.edu harp.aix.calpoly.edu irc.caltech.edu irc.colorado.edu organ.ctr.columbia.edu red-dwarf.cit.cornell.edu irc.law.emory.edu irc.harvard.edu irc.iastate.edu irc.ilstu.edu irc-2.mit.edu irc.catt.ncsu.edu irc.pitt.edu irc.cs.rpi.edu irc.rutgers.edu irc.sdsc.edu irc.stanford.edu anarchy.tamu.edu irc.ucdavis.edu irc.uci.edu irc.uiuc.edu pegasus.ccs.itd.umich.edu irc.umn.edu irc.ecn.uoknor.edu piglet.cc.utexas.edu joyce.eng.yale.edu irc.ais.net irc2.ais.net irc.bridge.net irc.cdc.net irc.digex.net irc.epix.net irc.gate.net irc.mcs.net irc.mo.net irc.phoenix.net irc.texas.net irc-2.texas.net];
@               bv.cl.Url = [http://www.eden.com/~genesisk/irc/];
@   bv.u.BadUserNameChars = [\\\=+^!#@&\;|\(\)\{\}];
@           bv.u.BadNicks = [Server Mode You \[];
@      bv.u.RandNickChars = [\\\lI_^\{\}\[\]|0123456789-];
@               bv.u.Font = [small];
@      bv.u.AutoJoinChans = [];
@            bv.u.IgTypes = [All];
@      bv.u.AutoReplyPats = [];

@        bv.u.DefType.Ban = [UDI];
@     bv.u.DefType.Ignore = [UDI];
@    bv.u.DefType.BanKick = [UDI];
@     bv.u.DefType.Friend = [UDI];
@       bv.u.DefType.Shit = [UDI];

/* files and directories
   --------------------- */
@ bv.f.BurritoDir = BURRITO_DIR ? BURRITO_DIR : HOME ## [/.burrito];
@     bv.f.BinDir = bv.f.BurritoDir ## [/bin];
@    bv.f.FontDir = bv.f.BurritoDir ## [/fonts];
@   bv.f.SoundDir = bv.f.BurritoDir ## [/sounds];
@  bv.f.ScriptDir = bv.f.BurritoDir ## [/scripts];
@  bv.f.ConfigDir = bv.f.BurritoDir ## [/configs];

@ bv.f.Save  = match($HOME* $bv.f.BurritoDir) ? bv.f.BurritoDir ## [/burritorc] : HOME ## [/.burritorc];
@ bv.f.SvBk  = bv.f.Save ## [.backup];
@ bv.f.Help  = bv.f.ScriptDir ## [/burrito.help];
@ bv.f.Xdcc  = bv.f.ScriptDir ## [/zdcc.irc];
@ bv.f.Xtra  = bv.f.ScriptDir ## [/chips+salsa.irc];
@ bv.f.Xtra2 = bv.f.ScriptDir ## [/enchilada.irc];

@    bv.f.LiceConfig = bv.f.ConfigDir ## [/lice.config];
@ bv.f.PhoenixConfig = bv.f.ConfigDir ## [/phoenix.config];
@ bv.f.NoColorConfig = bv.f.ConfigDir ## [/nocolor.config];

@ bv.f.NetScape = [netscape];
@     bv.f.Lynx = [lynx];
@      bv.f.Ftp = [ncftp];
@ bv.f.IrcFlush = [ircflush];
@     bv.f.Play = bv.f.BinDir ## [/play];
@   bv.f.Figlet = bv.f.BinDir ## [/figlet];

/* toggles
   ------- */
@            bv.t.Debug = 0;
@      bv.t.DisplayAnsi = 0;
@        bv.t.BeepOnMsg = 1;
@  bv.t.BeepOnAutoReply = 1;
@   bv.t.BeepOnWallOpAr = 1;
@       bv.t.BeepOnKick = 1;
@ bv.t.BeepOnFriendJoin = 1;
@      bv.t.ShowWhoLeft = 1;
@     bv.t.SendAwayMsgs = 0;
@      bv.t.LogMessages = 1;
@         bv.t.AutoJoin = 0;
@      bv.t.ShowUserBan = 1;
@     bv.t.LeaveWinKill = 1;
@       bv.t.AutoGetDCC = 0;
@       bv.t.WInslookup = 1;
@        bv.t.WallNames = 0;
@         bv.t.AutoGone = 1;
@ bv.t.AutoJoinOnInvite = 0;

@            bv.t.Beeps = 1;
@           bv.t.Sounds = 1;
@ bv.t.AlwaysPlaySounds = 0;
@  bv.t.FriendFunctions = 1;
@         bv.t.FriendOp = 1;
@    bv.t.ShitFunctions = 1;
@     bv.t.BotFunctions = 1;
@            bv.t.BotOp = 1;
@          bv.t.BotWait = 1;
@    bv.t.FriendOpDelay = 0;

/* [todo: hmm...] */
/* @ bv.t.ShowWhoOnJoinCache = 1;
 * @              bv.t.Cache = 0;
 */

#@ bv.t.ShowTime        = 1;
@ bv.t.ShowTime.Pub    = 0;
@ bv.t.ShowTime.Msg    = 1;
@ bv.t.ShowTime.Chat   = 0;
@ bv.t.ShowTime.Notice = 0;
@ bv.t.ShowTime.WallOp = 0;
@ bv.t.ShowTime.Notes  = 1;
@ bv.t.ShowTime.Crap   = 0;
@ bv.t.ShowTime.CtCp   = 0;
@ bv.t.ShowTime.DCC    = 0;

/* OPERview toggles */
@             bv.t.OV = 0;
@        bv.t.OV.Misc = 1;
@        bv.t.OV.Hack = 1;
@        bv.t.OV.Fake = 1;
@        bv.t.OV.Kill = 1;
@    bv.t.OV.OperKill = 1;
@      bv.t.OV.UnAuth = 1;
@        bv.t.OV.Full = 1;
@    bv.t.OV.NickKill = 1;
@         bv.t.OV.Msg = 1;
@ bv.t.OV.BadUserName = 1;
@      bv.t.OV.Client = 1;
@       bv.t.OV.Bogus = 1;

/* pr0t */
@   bv.t.Prot.Channel = 1;
@ bv.t.Prot.ChanUltra = 0;
@     bv.t.Prot.Flood = 1;
@     bv.t.Prot.Ultra = 0;
@   bv.t.Prot.Nethack = 0;
@    bv.t.Prot.Sentry = 0;
@   bv.t.Prot.UserBan = 1;

@       bv.t.OpClones = 1;
@     bv.t.ServerMotd = 1;
@           bv.t.Fwin = 1;
@        bv.t.FwinTop = 1;
@     bv.t.AutoRejoin = 1;
@       bv.t.ShowChan = 0;
@    bv.t.NamesWindow = 0;

/* show userhosts */
@ bv.t.Uh.Topic      = 0;
@ bv.t.Uh.Pub        = 0;
@ bv.t.Uh.Mode       = 0;
@ bv.t.Uh.SignOff    = 0;
@ bv.t.Uh.Nick       = 0;
@ bv.t.Uh.Msg        = 1;
@ bv.t.Uh.Notice     = 0;
@ bv.t.Uh.DccChat    = 0;
@ bv.t.Uh.WallOp     = 0;
@ bv.t.Uh.ChanWallOp = 0;
@ bv.t.Uh.CtCp       = 1;
@ bv.t.Uh.CtCpReply  = 0;
@ bv.t.WhoLong       = 0;

/* sensors
   ------- */
@ bv.l.AutoGone = 5;
@     bv.l.Ctcp = 5;
@      bv.l.Msg = 10;
@   bv.l.Notice = 10;
@     bv.l.Nick = 4;
@     bv.l.Kick = 10;
@     bv.l.Deop = 10;

@ bv.l.FriendOpDelay = 2;

/* messages
   -------- */
@ atmp.open = [.oO ];
@ atmp.close = [ Oo.];

@             bv.m.Kick = atmp.open ## [Out BiTCH]            ## atmp.close;
@          bv.m.BanKick = atmp.open ## [DoNT FuCk WiTH DaDDy] ## atmp.close;
@    bv.m.BanKickIgnore = atmp.open ## [DoNT FuCk WiTH DaDDy] ## atmp.close;
@      bv.m.NetHackKick = atmp.open ## [Out BiTCH]            ## atmp.close;
@         bv.m.CapsKick = atmp.open ## [CAPSLOCK CHALLENGED]  ## atmp.close;
@        bv.m.PunctKick = atmp.open ## [Excessive use of Punctuation] ## atmp.close;
@         bv.m.WordKick = atmp.open ## [WordKiCk]             ## atmp.close;
@          bv.m.BadUser = atmp.open ## [BadUserId]            ## atmp.close;
@          bv.m.BadNick = atmp.open ## [StupidNick]           ## atmp.close;
@          bv.m.UserBan = atmp.open ## [UserBan]              ## atmp.close;
@      bv.m.FloodPublic = atmp.open ## [Flood]                ## atmp.close;
@        bv.m.FloodNick = atmp.open ## [NickFlood]            ## atmp.close;

/* [todo: hmm...] */
@       bv.m.FilterKick = atmp.open ## [FilterKick \[%pat\]\(%num\)] ## atmp.close;
@         bv.m.MassKick = atmp.open ## [MassKick]             ## atmp.close;
@    bv.m.MassNonOpKick = atmp.open ## [MassNonOpKick]        ## atmp.close;
@       bv.m.MassOpKick = atmp.open ## [MassOpKick]           ## atmp.close;
@      bv.m.MassBanKick = atmp.open ## [MassBanKick]          ## atmp.close;
@ bv.m.MassBanNonOpKick = atmp.open ## [MassBanNonOpKick]     ## atmp.close;
@    bv.m.MassBanOpKick = atmp.open ## [MassBanOpKick]        ## atmp.close;
@         bv.m.GoneIdle = atmp.open ## [Automagically Set Away] ## atmp.close;

/* [todo: need something better here...] */
@             bv.m.Gone = atmp.open ## [Gone] ## atmp.close;
@        bv.m.GoneShell = atmp.open ## [Suspended] ## atmp.close;

/* [todo: need something better here...] */
@             bv.m.Back = [miss me?];
@           bv.m.Finger = [];
@             bv.m.Ping = [];

/* [todo: hmm...] */
@             bv.m.Shit = [FuCk OFF];

/* [todo: hmm...] */
@          bv.m.SignOff = [YoW];
@         bv.m.FloodMsg = [MSG Flood from YOU, you are now being ignored];
@        bv.m.FloodCtcp = [CTCP Flood from YOU, you are now being ignored];
@      bv.m.FloodNotice = [NOTICE Flood from YOU, you are now being ignored];

/* sounds
   ------ */
/* @  bv.s.AutoReply = [ding.wav];
 * @   bv.s.WallOpAr = [ding.wav];
 * @ bv.s.FriendJoin = [chord.wav];
 * @        bv.s.Msg = [chimes.wav];
 * @       bv.s.Kick = [boing.wav];
 */
@  bv.s.AutoReply = [boing.wav];
@   bv.s.WallOpAr = [boing.wav];
@ bv.s.FriendJoin = [bubbles.wav];
@        bv.s.Msg = [chimes.wav];
@       bv.s.Kick = [crunch.wav];

/* format strings
   -------------- */
@     bv.fs.WallOp = [<WallOp>%num<%chan>];
@       bv.fs.Kick = [ %reason ];
@   bv.fs.ShitKick = [Shitted! for %reason];
@ bv.fs.SentryKick = [Sentry: %type limit exceeded, get the fuck out bitch!];
@       bv.fs.Gone = [Is Away -\(+ %reason +\)- Message logging is %logging];
@       bv.fs.Back = [Is Back -\(+ %reason +\)-];

/* color strings
   ------------- */
@ bv.cs.Decho = [\[\[1\;31mDebug\[m\]];
@ bv.cs.Becho = [\[\[1\;33m*\[m\]];
@ bv.cs.Hecho = [\[\[1\;33mH\[m\]];
@ bv.cs.Secho = [\[\[1\;33m-\[m\]];
@ bv.cs.Oecho = [\[\[35mOV\[m\]];

/* Bold, Underline, Inverse, Default */
@ bv.cs.B = [\[35m];
@ bv.cs.U = [\[1;35m];
@ bv.cs.I = [\[5m];
@ bv.cs.D = [\[m];

@ bv.cs.Time1 = [\[35m\[];
@ bv.cs.Time2 = [\]\[m ];

@ bv.cs.WhoisIdle = [\[${bv.cs.B}TimeIdle${bv.cs.D}\]];
@ bv.cs.WhoisSignOn = [\[${bv.cs.B}SignOn${bv.cs.D}\]];

@ bv.cs.LCM1 = [\[m\[\[35mLCM Decoded. Key:];
@ bv.cs.LCM2 = [\[m\]];


/* Show Channel Strings
 * --------------------
 * these should automagically go to the right channel window
 */

> ^Assign bv.ms.Action bf.Echo.z Pub _ Action [32m* [31m$0[m $3-
> ^Assign bv.ms.ActionUh bf.Echo.z Pub _ Action [32m* [31m$0[0\;32m![31m$1[m $3-
> ^Assign bv.ms.ActionAr bf.Echo.z Pub _ UserLog1 [1\;32m* [35m$0[m $3-
> ^Assign bv.ms.ActionHi bf.Echo.z Pub _ UserLog2 [32m* [1\;31m$0[m $3-
> ^Assign bv.ms.ActionChan bf.Echo.z Pub _ Action [32m* [31m$0[0\;32m:[31m$2[m $3-
> ^Assign bv.ms.ActionChanUh bf.Echo.z Pub _ Action [32m* [31m$0[0\;32m![31m$1[0\;32m:[31m$2[m $3-
> ^Assign bv.ms.ActionChanAr bf.Echo.z Pub _ UserLog1 [1\;32m* [35m$0[0\;32m:[31m$2[m $3-
> ^Assign bv.ms.ActionChanHi bf.Echo.z Pub _ UserLog2 [32m* [1\;31m$0[0\;32m:[31m$2[m $3-
> ^Assign bv.ms.ActionChanUhAr bf.Echo.z Pub _ UserLog1 [1\;32m* [35m$0[0\;32m![31m$1[32m:[31m$2[m $3-
> ^Assign bv.ms.ActionChanUhHi bf.Echo.z Pub _ UserLog2 [32m* [1\;31m$0[0\;32m![31m$1[32m:[31m$2[m $3-
> ^Assign bv.ms.ActionUhAr bf.Echo.z Pub _ UserLog1 [1\;32m* [1\;35m$0[0\;32m![31m$1[m $3-
> ^Assign bv.ms.ActionUhHi bf.Echo.z Pub _ UserLog2 [32m* [1\;31m$0[0\;32m![31m$1[m $3-

> ^Assign bv.ms.Public bf.Echo.z Pub _ Public [0\;31m<[0\;31m$0[0\;31m>[m $3-
> ^Assign bv.ms.PublicUh bf.Echo.z Pub _ Public [0\;31m<[0\;31m$0[0\;32m![0\;31m$1>[m $3-
> ^Assign bv.ms.PublicAr bf.Echo.z Pub _ UserLog1 [1\;33m<[35m$0[33m>[m $3-
> ^Assign bv.ms.PublicHi bf.Echo.z Pub _ UserLog2 [31m<[1\;31m$0[0\;31m>[m $3-
> ^Assign bv.ms.PublicChan bf.Echo.z Pub _ Public [31m<$0[32m:[31m$2>[m $3-
> ^Assign bv.ms.PublicChanUh bf.Echo.z Pub _ Public [0\;31m<[0\;31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2>[m $3-
> ^Assign bv.ms.PublicChanAr bf.Echo.z Pub _ UserLog1 [1\;33m<[35m$0[0\;32m:[0\;31m$2[33m>[m $3-
> ^Assign bv.ms.PublicChanHi bf.Echo.z Pub _ UserLog2 [0\;31m<[31m$0[0\;32m:[0\;31m$2>[m $3-
> ^Assign bv.ms.PublicChanUhAr bf.Echo.z Pub _ UserLog1 [1\;33m<[35m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2[33m>[m $3-
> ^Assign bv.ms.PublicChanUhHi bf.Echo.z Pub _ UserLog2 [0\;31m<[31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2>[m $3-
> ^Assign bv.ms.PublicUhAr bf.Echo.z Pub _ UserLog1 [1\;33m<[35m$0[0\;32m![0\;31m$1[33m>[m $3-
> ^Assign bv.ms.PublicUhHi bf.Echo.z Pub _ UserLog2 [0\;31m<[31m$0[0\;32m![0\;31m$1>[m $3-

> ^Assign bv.ms.PublicMsg bf.Echo.z Pub _ Public [0\;31m\([0\;31m$0[0\;31m\)[m $3-
> ^Assign bv.ms.PublicMsgUh bf.Echo.z Pub _ Public [0\;31m\([0\;31m$0[0\;32m![0\;31m$1\)[m $3-
> ^Assign bv.ms.PublicMsgAr bf.Echo.z Pub _ UserLog1 [1\;33m\([35m$0[33m\)[m $3-
> ^Assign bv.ms.PublicMsgHi bf.Echo.z Pub _ UserLog2 [0\;31m\([31m$0[30m\)[m $3-
> ^Assign bv.ms.PublicMsgChan bf.Echo.z Pub _ Public [0\;31m\([0\;31m$0[0\;32m:[0\;31m$2\)[m $3-
> ^Assign bv.ms.PublicMsgChanUh bf.Echo.z Pub _ Public [0\;31m\([0\;31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2\)[m $3-
> ^Assign bv.ms.PublicMsgChanAr bf.Echo.z Pub _ UserLog1 [1\;33m\([35m$0[0\;32m:[0\;31m$2[33m\)[m $3-
> ^Assign bv.ms.PublicMsgChanHi bf.Echo.z Pub _ UserLog2 [0\;31m\([31m$0[0\;32m:[0\;31m$2\)[m $3-
> ^Assign bv.ms.PublicMsgChanUhAr bf.Echo.z Pub _ UserLog1 [1\;33m\([35m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2[33m\)[m $3-
> ^Assign bv.ms.PublicMsgChanUhHi bf.Echo.z Pub _ UserLog2 [0\;31m\([31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2\)[m $3-
> ^Assign bv.ms.PublicMsgUhAr bf.Echo.z Pub _ UserLog1 [1\;33m\([35m$0[0\;32m![0\;31m$1[33m\)[m $3-
> ^Assign bv.ms.PublicMsgUhHi bf.Echo.z Pub _ UserLog2 [0\;31m\([31m$0[0\;32m![0\;31m$1\)[m $3-

> ^Assign bv.ms.PublicNotice bf.Echo.z Pub _ Public [0\;31m-$0\-[m $3-
> ^Assign bv.ms.PublicNoticeUh bf.Echo.z Pub _ Public [0\;31m-[0\;31m$0[0\;32m![0\;31m$1\[30m-[m $3-
> ^Assign bv.ms.PublicNoticeAr bf.Echo.z Pub _ UserLog1 [1\;33m-[35m$0\[33m-[m $3-
> ^Assign bv.ms.PublicNoticeHi bf.Echo.z Pub _ UserLog2 [0\;31m-[1\;31m$0\[0\;31m-[m $3-
> ^Assign bv.ms.PublicNoticeChan bf.Echo.z Pub _ Public [0\;31m-[0\;31m$0[0\;32m:[0\;31m$2\[30m-[m $3-
> ^Assign bv.ms.PublicNoticeChanUh bf.Echo.z Pub _ Public [0\;31m-[0\;31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2\[30m-[m $3-
> ^Assign bv.ms.PublicNoticeChanAr bf.Echo.z Pub _ UserLog1 [1\;33m-[35m$0[0\;32m:[0\;31m$2\[33m-[m $3-
> ^Assign bv.ms.PublicNoticeChanHi bf.Echo.z Pub _ UserLog2 [0\;31m-[31m$0[0\;32m:[0\;31m$2\[30m-[m $3-
> ^Assign bv.ms.PublicNoticeChanUhAr bf.Echo.z Pub _ UserLog1 [1\;33m-[35m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2\[33m-[m $3-
> ^Assign bv.ms.PublicNoticeChanUhHi bf.Echo.z Pub _ UserLog2 [0\;31m-[31m$0[0\;32m![0\;31m$1[0\;32m:[0\;31m$2\[30m-[m $3-
> ^Assign bv.ms.PublicNoticeUhAr bf.Echo.z Pub _ UserLog1 [1\;33m-[35m$0[0\;32m![0\;31m$1\[33m-[m $3-
> ^Assign bv.ms.PublicNoticeUhHi bf.Echo.z Pub _ UserLog2 [0\;31m-[31m$0[0\;32m![0\;31m$1\[30m-[m $3-

> ^Assign bv.ms.ChannelNick bf.Echo.z Crap [35m*** Crap [0\;32m$bf.LFormat(9 $0) [35mis now known as [32m$3
> ^Assign bv.ms.ChannelNickChan bf.Echo.z Crap [35m*** Crap [0\;32m$bf.LFormat(9 $0) [35mis now known as [32m$3 [35min [0\;31m$2
> ^Assign bv.ms.ChannelNickUh bf.Echo.z Crap [35m*** Crap [0\;32m$0[1\;32m![30m$1 [0\;35m is now known as [32m$3
> ^Assign bv.ms.ChannelNickChanUh bf.Echo.z Crap [35m*** Crap [0\;32m$0[1\;32m![30m$1 [0\;35m is now known as [32m$3 [35min [0\;31m$2

> ^Assign bv.ms.NickName bf.Echo.z Crap [35m*** Crap [0\;32m$bf.LFormat(9 $0) [35mis now known as [32m$2;
> ^Assign bv.ms.NickNameUh bf.Echo.z Crap [35m*** Crap [0\;32m$0[1m![0\;31m$1 [35m is now known as [32m$2;

> ^Assign bv.ms.ChanMode bf.Echo.z Notes [35m*** Notes [35m$bf.LFormat(9 $0) Sets mode: [32m$3-;
> ^Assign bv.ms.ChanModeChan bf.Echo.z Notes [35m*** Notes [35m$bf.LFormat(9 $0) Sets mode: [32m$3- [35mOn chan: [0\;31m$2[m;
> ^Assign bv.ms.ChanModeUh bf.Echo.z Notes [35m*** Notes [35m$0[32m![0\;31m$1 [0\;35mSets mode: [32m$3-;
> ^Assign bv.ms.ChanModeChanUh bf.Echo.z Notes [35m*** Notes [35m$0[32m![0\;31m$1 [0\;35mSets mode: [32m$3- [35mOn chan: [0\;31m$2[m;

> ^Assign bv.ms.NetHack bf.Echo.z Crap [35m*** Crap [35mNetHack: [32m$3- [35mby $0;
> ^Assign bv.ms.NetHackChan bf.Echo.z Crap [35m*** Crap [35mNetHack: [32m$3- [35mby $0 on chan: [32m$2;

> ^Assign bv.ms.ChannelSignoff bf.Echo.z Notes [35m*** Crap [0\;35mSignOff: [32m$bf.LFormat(9 $0) [35m[[m$3-[0\;35m\];
> ^Assign bv.ms.ChannelSignoffUh bf.Echo.z Notes [35m*** Crap [0\;35mSignOff: [32m$0[1m![30m$1 [35m[[m$3-[0\;35m\];
> ^Assign bv.ms.ChannelSignoffChan bf.Echo.z Notes [35m*** Crap [0\;35mSignOff: [32m$bf.LFormat(9 $0) [35min [0\;31m$2 [35m[[m$3-[0\;35m\];
> ^Assign bv.ms.ChannelSignoffChanUh bf.Echo.z Notes [35m*** Crap [0\;35mSignOff: [32m$0[1m![30m$1 [0\;35min [0\;31m$2 [35m[[m$3-[0\;35m\];

> ^Assign bv.ms.NetSplit bf.Echo.z Notes [35m*** Crap [0\;35mNetSplit: [32m$bf.LFormat(9 $0) [35m[$3 - $4\];
> ^Assign bv.ms.NetSplitUh bf.Echo.z Notes [35m*** Crap [0\;35mNetSplit: [32m$0[1m![30m$1 [0\;35m[$3 - $4];
> ^Assign bv.ms.NetSplitChan bf.Echo.z Notes [35m*** Crap [0\;35mNetSplit: [32m$bf.LFormat(9 $0) [35min [0\;31m$2 [1\;33m[[m$3 [35m-[m $4[1\;33m\];
> ^Assign bv.ms.NetSplitChanUh bf.Echo.z Notes [35m*** Crap [0\;35mNetSplit: [32m$0[1m![30m$1 [0\;35min [0\;31m$2 [1\;33m[[m$3 [35m-[m $4[1\;33m\];

> ^Assign bv.ms.Names bf.Echo.z Crap [35m*** Crap [0\;35mUsers on [1\;31m$1[0\;32m: [0\;35m$sar(g/@/[1\;31m@[0\;35m/$2-);
#@      bv.ms.Nickname bf.Echo.z = [Crap Crap Nickname: $*];
> ^Assign bv.ms.SendPublic bf.Echo.z Pub _ Public [1\;33m<[m$N\[1\;33m>[m $1-;
> ^Assign bv.ms.TopicChange bf.Echo.z Crap [35m*** Crap [1\;31m$0 [0\;35mhas changed the topic for $2 to:[m $3-;
> ^Assign bv.ms.TopicChangeUh bf.Echo.z Crap [35m*** Crap [1\;31m$0[0\;32m![0\;31m$1 [0\;35mhas changed the topic for $2 to:[m $3-;
> ^Assign bv.ms.TopicSetBy bf.Echo.z Crap [35m*** Crap [0\;35mTopic set by [1\;31m$1 [0\;35m$2-;
> ^Assign bv.ms.Topic bf.Echo.z Crap [35m*** Crap [0\;35mTopic for [1\;31m$0[m: $1-;
> ^Assign bv.ms.ModeIs bf.Echo.z Crap [35m*** Crap [0\;35mMode for channel [1\;31m$0[m: [32m$1-;


/* Show Window Strings
 * --------------------
 * these do not go to the right window by default so we must give one
 */
> ^Assign bv.ms.Kick bf.Echo.w Notes [35m*** $3 Notes [0\;32m$bf.LFormat(9 $2) [35mKicked off $3 by [32m$0 [35m[[m$4-[0\;35m\];
> ^Assign bv.ms.KickUser bf.Echo.w Notes [35m*** $3 Notes [1\;33mYOU [0\;35mWere kicked off $3 by [32m$0 [35m[[m$4-[0\;35m\];
> ^Assign bv.ms.KickUh bf.Echo.w Notes [35m*** $3 Notes [0\;32m$bf.LFormat(9 $2) [35mKicked off $3 by [32m$0[0\;32m![0\;31m$1 [0\;35m[[m$4-[0\;35m\];
> ^Assign bv.ms.KickUserUh bf.Echo.w Notes [35m*** $3 Notes [1\;33mYOU [0\;35mWere kicked off $3 by [32m$0[0\;32m![0\;31m$1 [0\;35m[[m$4-[0\;35m\];

> ^Assign bv.ms.Join bf.Echo.w Notes [35m*** $2 Notes [0\;32m$bf.LFormat(9 $0) [35m[$1\] has joined $2[m;
> ^Assign bv.ms.Leave bf.Echo.w Notes [35m*** $2 Notes [0\;32m$bf.LFormat(9 $0) [35mhas left [32m$2[m [35m[$1\];

> ^Assign bv.ms.ChanWallOp bf.Echo.w WallOp _ $2 WallOp [35m*[0\;31m$0[0\;35m*[m$3-;
> ^Assign bv.ms.ChanWallOpUh bf.Echo.w WallOp _ $2 WallOp [35m*[0\;31m$0[0\;32m![0\;31m$1[0\;35m*[m$3-;
> ^Assign bv.ms.ChanWallOpAr bf.Echo.w WallOp _ $2 WallOp [1\;35m*$0*[m$3-;
> ^Assign bv.ms.ChanWallOpHi bf.Echo.w WallOp _ $2 WallOp [35m*[1\;31m$0[0\;35m*[m$3-;
> ^Assign bv.ms.ChanWallOpUhAr bf.Echo.w WallOp _ $2 WallOp [1\;35m*$0[0\;32m![0\;31m$1[0\;35m*[m$3-;
> ^Assign bv.ms.ChanWallOpUhHi bf.Echo.w WallOp _ $2 WallOp [35m*[1\;31m$0[0\;32m![0\;31m$1[0\;35m*[m$3-;

> ^Assign bv.ms.SendChanWallOp bf.Echo.w WallOp _ $0 WallOp [m-> $1-;
> ^Assign bv.ms.SentChanWallOpTo bf.Echo.w WallOp _ $0 WallOp $bv.cs.Becho Sent WallOp to: [[35m$1-[m\];

> ^Assign bv.ms.CantSend bf.Echo.w Crap [35m*** $1 Crap [32m$1[0\;32m: [35mCannot send to channel, from $0;
> ^Assign bv.ms.NotOnChan bf.Echo.w Crap [35m*** $1 Crap [32m$1[0\;32m: [35mYou are not on that channel, from $0;
> ^Assign bv.ms.NotChanOp bf.Echo.w Crap [35m*** $1 Crap [32m$1[0\;32m: [35mYou are not a channel operator, from $0;

> ^Assign bv.ms.Ctcp bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3 [0\;35mfrom [1\;31m$0 [0\;35mto $2[m${[$4]?[$bg.Colon $4-]:[]};
> ^Assign bv.ms.CtcpUser bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3 [0\;35mfrom [1\;31m$0 [0\;35mto [1\;33mYOU[m${[$4]?[$bg.Colon $4-]:[]};
> ^Assign bv.ms.CtcpFunc bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3- [0\;35mfrom [1\;31m$0 [0\;35mto $2;
> ^Assign bv.ms.CtcpFuncUser bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3- [0\;35mfrom [1\;31m$0 [0\;35mto [1\;33mYOU;
> ^Assign bv.ms.CtcpUnknown bf.Echo.w CtCp $bv.cs.Becho $2 CtCp [35mUnknown CTCP from [1\;31m$0 [0\;35mto $2[m: $3-;
> ^Assign bv.ms.CtcpUnknownUser bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mUnknown CTCP from [1\;31m$0 [0\;35mto [1\;33mYOU[m: $3-;

> ^Assign bv.ms.CtcpUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3 [0\;35mfrom [1\;31m$0[0\;32m![0\;35m$1 to $2[m${[$4]?[$bg.Colon $4-]:[]};
> ^Assign bv.ms.CtcpUserUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3 [0\;35mfrom [1\;31m$0[0\;32m![0\;35m$1 to [1\;33mYOU[m${[$4]?[$bg.Colon $4-]:[]};
> ^Assign bv.ms.CtcpFuncUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3- [0\;35mfrom [1\;31m$0[0\;32m![0\;35m$1 to $2;
> ^Assign bv.ms.CtcpFuncUserUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$3- [0\;35mfrom [1\;31m$0[0\;32m![0\;35m$1 to [1\;33mYOU;
> ^Assign bv.ms.CtcpUnknownUh bf.Echo.w CtCp $bv.cs.Becho $2 CtCp [35mUnknown CTCP from [1\;31m$0[0\;32m![0\;35m$1 to $2[m: $3-;
> ^Assign bv.ms.CtcpUnknownUserUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mUnknown CTCP from [1\;31m$0[0\;32m![0\;35m$1 to [1\;33mYOU[m: $3-;

> ^Assign bv.ms.CtcpReply bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$2 [0\;35mfor [1\;31m$0[m: $3-;
> ^Assign bv.ms.CtcpPingReply bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [1\;31m$3\ING [0\;35mfor [1\;31m$0[0\;35m: $4-;

> ^Assign bv.ms.CtcpReplyUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [35mCTCP [1\;31m$2 [0\;35mfor [1\;31m$0[0\;32m![0\;31m$1[m: $3-;
> ^Assign bv.ms.CtcpPingReplyUh bf.Echo.w CtCp $bv.cs.Becho $1 CtCp [1\;31m$3\ING [0\;35mfor [1\;31m$0[0\;32m![0\;31m$1[0\;35m: $4-;

> ^Assign bv.ms.SendCtCp bf.Echo.w CtCp _ $0 CtCp [m-> CtCp: [1\;31m$0[m $1-;

> ^Assign bv.ms.TopicNone bf.Echo.w Crap [35m*** $1 Crap [35m$0 No topic is set.;
> ^Assign bv.ms.Ban bf.Echo.w Crap [35m*** $1 Crap [0\;35mBan$[3]0: [1\;31m$[10\]1[m [0\;31m$2-;
#, ^Assign bv.ms.BanDate bf.Echo.w Crap _ $1 Crap [0\;35mBan [0\;33m$bf.LFormat(-25 $2) [32m$[-2]0 [31m$3[m;
> ^Assign bv.ms.BanDate bf.Echo.w Crap _ $1 Crap [0\;33m$bf.LFormat(-28 $2) [32m$[-2]0 [31m$3[m;
> ^Assign bv.ms.BanNum bf.Echo.w Crap [35m*** $0 Crap [35mNumber of Bans on [32m$0[35m: [32m$1;
> ^Assign bv.ms.SendAction bf.Echo.w Pub _ $0 Action [1\;32m*[m $N $1-;
> ^Assign bv.ms.SendActionTarget bf.Echo.w Pub _ $0 Action [1\;32m*[m $N\:$0 $1-;
> ^Assign bv.ms.Scan bf.Echo.w Crap [35m*** $0 Crap [35mUsers on [1\;31m$0 [0\;35m[[32m$1[35m\]: $sar(g/@/[1\;31m@[0\;35m/$2-);
> ^Assign bv.ms.UserNick bf.Echo.w Crap [35m*** $1 Crap [1\;33mYOU [0\;35mare now known as [32m$0;

> ^Assign bv.ms.NamesWindow bf.Echo.w Crap [35m*** $0 Crap [0\;35mUsers on [1\;31m$1 [30m[[0\;32m$2[0\;31m\][0\;32m: [33m$sar(g/@/[1\;31m@[0\;33m/$3-);

> ^Assign bv.ms.MassMsg bf.Echo.w Msg _ $0 Msg [m-> MassMsg: *[35m$1[m* $2-;


/* show main strings
 * --------------------
 * These all goto the main window
 */
> ^Assign bv.ms.DccConnect bf.Echo.x Dcc [35m*** DCC DccConnect: $*;
> ^Assign bv.ms.DccLost bf.Echo.x Dcc [35m*** DCC DccLost: $*;
> ^Assign bv.ms.DccRequest bf.Echo.x Dcc [35m*** DCC DCC [1\;31m$2[0\;35m [$3-4] Request from $0\!$1;
> ^Assign bv.ms.DccChat bf.Echo.x Chat _ Msg [1\;33m=[35m$0[33m=[m $2-;
> ^Assign bv.ms.DccChatUh bf.Echo.x Chat _ Msg [1\;33m=[35m$0[0\;32m![0\;31m$1[1\;33m=[m $2-;
> ^Assign bv.ms.Msg bf.Echo.x Msg _ Msg [1\;33m[[35m$0[33m\][m $2-;
> ^Assign bv.ms.MsgUh bf.Echo.x Msg _ Msg [1\;33m[[35m$0[0\;32m![0\;31m$1[1\;33m\][m $2-;
> ^Assign bv.ms.MsgGroup bf.Echo.x Msg _ Msg [1\;33m[[35m$0[0\;32m![0\;31m$1[1\;31m$2[1\;33m\][m $3-;
> ^Assign bv.ms.Notice bf.Echo.x Notice _ Notice [1\;33m-[35m$0\[33m-[m $2-;
> ^Assign bv.ms.NoticeUh bf.Echo.x Notice _ Notice [1\;33m-[35m$0[0\;32m![0\;31m$1\[1\;33m-[m $2-;
> ^Assign bv.ms.UserMode bf.Echo.x Crap $bv.cs.Becho Crap [0\;35mMode change for user [32m$2[m: [0\;31m$3-;
> ^Assign bv.ms.NotifySignOff bf.Echo.x Crap $bv.cs.Becho Crap NotifySignoff: $*;
> ^Assign bv.ms.NotifySignOn bf.Echo.x Crap $bv.cs.Becho Crap NotifySignon: $*;
> ^Assign bv.ms.SendDccChat bf.Echo.x Chat _ Msg [m-> =[1\;31m$0[m= $1-;
> ^Assign bv.ms.SendMsg bf.Echo.x Msg _ Msg [m-> *[1\;31m$0[m* $1-;
> ^Assign bv.ms.SendNotice bf.Echo.x Notice _ Notice [m-> -[1\;31m$0[m- $1-;
> ^Assign bv.ms.SignOff bf.Echo.x Notes [35m*** Crap [35mSignOff: [32m$0 [35m[[m$1-[35m\];
> ^Assign bv.ms.WallOp bf.Echo.x WallOp _ WallOp WallOp: $*;
> ^Assign bv.ms.Who bf.Echo.x Crap _ Crap [35m$[10\]0 [0\;31m$[9\]1 [0\;35m$[3\]2 [0\;31m$3[0\;32m@[0\;31m$4[m [35m$6;
> ^Assign bv.ms.WhoLong bf.Echo.x Crap _ Crap [35m$[10\]0 [0\;31m$[9\]1 [0\;35m$[3\]2 [0\;31m$3[0\;32m@[0\;31m$4[m [35m$5 $6[m \($7-\);
> ^Assign bv.ms.Banned bf.Echo.x Crap [35m*** Crap [32m$1 [0\;35mCannot join channel - Banned from channel.;
> ^Assign bv.ms.UmodeIs bf.Echo.x Crap $bv.cs.Becho Crap Your UserMode is: $*;
> ^Assign bv.ms.Invite bf.Echo.x Notes [35m*** Crap [1\;31m$0[0\;32m![33m$1 [35mInvites you to: [32m$2;
> ^Assign bv.ms.InviteOnly bf.Echo.x Crap [35m*** Crap [32m$1 [0\;35mCannot join channel - Invite only channel.;
> ^Assign bv.ms.BadChanKey bf.Echo.x Crap [35m*** Crap [32m$1 [0\;35mCannot join channel - Bad channel key.;
> ^Assign bv.ms.UserBan bf.Echo.x Notes [35m*** Crap [35mBan on you in $2 by [1\;31m$0[0\;32m![35m$1\: $4]

> ^Assign bv.ms.SendMassMsg bf.Echo.x Msg _ Msg [m-> *[1\;31m$0[m:$1* $2-;
> ^Assign bv.ms.SendMassNotice bf.Echo.x Notice _ Notice [m-> -[1\;31m$0[m:$1\- $2-;

> ^Assign bv.ms.WhoIsShort bf.Echo.x Crap _ Crap [$bv.cs.B\WI$bv.cs.D\] [1\;35m$0[0\;32m![33m$1[m \($2-\);
> ^Assign bv.ms.WhoIsLong1 bf.Echo.x Crap _ Crap [$bv.cs.B\ Who Is $bv.cs.D\] [1\;35m$0[0\;32m![33m$1[m;
> ^Assign bv.ms.WhoIsLong2 bf.Echo.x Crap _ Crap [$bv.cs.B\UserInfo$bv.cs.D\] $*;
> ^Assign bv.ms.WhoIsServer bf.Echo.x Crap _ Crap [$bv.cs.B\ Server $bv.cs.D\] $0 \($1-\);
> ^Assign bv.ms.WhoIsIrcop bf.Echo.x Crap _ Crap [$bv.cs.B\  Info  $bv.cs.D\] $* [IRCop];
> ^Assign bv.ms.WhoIsChan bf.Echo.x Crap _ Crap [$bv.cs.B\Channels$bv.cs.D\] $*;
> ^Assign bv.ms.WhoWasShort bf.Echo.x Crap _ Crap [$bv.cs.B\WW$bv.cs.D\] [1\;35m$0[0\;32m![0\;31m$1[m \($2-\);
> ^Assign bv.ms.WhoWasLong1 bf.Echo.x Crap _ Crap [$bv.cs.B\ WhoWas $bv.cs.D\] [1\;35m$0[0\;32m![0\;31m$1[m;
> ^Assign bv.ms.WhoWasLong2 bf.Echo.x Crap _ Crap [$bv.cs.B\UserInfo$bv.cs.D\] $*;
> ^Assign bv.ms.WhoIsFriend bf.Echo.x Crap _ Crap [$bv.cs.B\ Friend $bv.cs.D\] $0, $1, $2;
> ^Assign bv.ms.WhoIsShit bf.Echo.x Crap _ Crap [$bv.cs.B\Shitted!$bv.cs.D\] $0, $1, $2, "$3-";
> ^Assign bv.ms.SetAway bf.Echo.x Crap _ Crap [$bv.cs.B\Set Away$bv.cs.D\] $*;
> ^Assign bv.ms.WhoIsAddr bf.Echo.x Crap _ Crap [$bv.cs.B\Address $bv.cs.D\] $*;

> ^Assign bv.ms.Link bf.Echo.x Crap _ Crap [[1\;33m-[m\] [32m#[0\;31m$[3\]0 [0\;32m[[0\;31m$[-3\]1[0\;32m\] [32m[[0\;31m$[-28\]2[0\;32m\] [m<- [32m[[0\;31m$[26\]3[0\;32m\];
> ^Assign bv.ms.FriendAdd bf.Echo.x Crap $bv.cs.Becho Crap Friend: Adding [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m;
> ^Assign bv.ms.FriendPrevious bf.Echo.x Crap $bv.cs.Becho Crap Friend: Old: [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m;
> ^Assign bv.ms.FriendChange bf.Echo.x Crap $bv.cs.Becho Crap Friend: New: [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m;
> ^Assign bv.ms.FriendList bf.Echo.x Crap $bv.cs.Becho Crap #[32m$[2\]0 [0\;31m$1 [0\;35m$2[m [[32m$3[m\];
> ^Assign bv.ms.ShitAdd bf.Echo.x Crap $bv.cs.Becho Crap Shit: Adding [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m, Reason: [35m$3-[m;
> ^Assign bv.ms.ShitPrevious bf.Echo.x Crap $bv.cs.Becho Crap Shit: Old: [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m, Reason: [35m$3-[m;
> ^Assign bv.ms.ShitChange bf.Echo.x Crap $bv.cs.Becho Crap Shit: New: [35m$0[m, Channels: [35m$1[m, Levels: [35m$2[m, Reason: [35m$3-[m;
> ^Assign bv.ms.ShitList bf.Echo.x Crap $bv.cs.Becho Crap #[32m$[2\]0 [0\;31m$1 [0\;35m$2[m [[32m$3[m\] $4-;
> ^Assign bv.ms.BotAdd bf.Echo.x Crap $bv.cs.Becho Crap Bot: Adding [35m$0[m, PassWd: [35m$1[m, Channels: [35m$2[m, UserInfo: [35m$3-[m;
> ^Assign bv.ms.BotPrevious bf.Echo.x Crap $bv.cs.Becho Crap Bot: Old: [35m$0[m, PassWd: [35m$1[m, Channels: [35m$2[m, UserInfo: [35m$3-[m;
> ^Assign bv.ms.BotChange bf.Echo.x Crap $bv.cs.Becho Crap Bot: New: [35m$0[m, PassWd: [35m$1[m, Channels: [35m$2[m, UserInfo: [35m$3-[m;
> ^Assign bv.ms.BotList bf.Echo.x Crap $bv.cs.Becho Crap #[32m$[2\]0 [0\;31m$1 [0\;35m$2[m [[32m$3[m\] [35m$4-;

> ^Assign bv.ms.Matches bf.Echo.x Crap $bv.cs.Becho Crap Possibilities: [35m$*;

> ^Assign bv.ms.FriendJoin bf.Echo.x Notes $bv.cs.Becho Crap [35mFriendJoin: [32m$bf.LFormat(9 $2) [35m[[33m$0[35m\] [35m$4 \($1\)[m;
> ^Assign bv.ms.FriendSignOff bf.Echo.x Notes $bv.cs.Becho Crap [35mFriendSignOff: [32m$bf.LFormat(9 $2) [35m[[33m$0[35m\] [35m$4 \($1\)[m;
> ^Assign bv.ms.ShitJoin bf.Echo.x Notes $bv.cs.Becho Crap [35mShitJoin: [32m$bf.LFormat(9 $2) [35m[[33m$0[35m\] [35m$4 \($1\)[m;

/* show ov strings
 * --------------------
 * These goto the operview window if it exists or the main window
 */
> ^Assign bv.ms.OVMisc bf.Echo.ov misc $4-;
> ^Assign bv.ms.OVHack bf.Echo.ov hack $4-;
> ^Assign bv.ms.OVFake bf.Echo.ov fake $4-;
> ^Assign bv.ms.OVKill bf.Echo.ov kill $4-;
> ^Assign bv.ms.OVOperKill bf.Echo.ov operkill OperKill: $0 by $1-;
> ^Assign bv.ms.OVUnauth bf.Echo.ov unauth UnAuth: $*;
> ^Assign bv.ms.OVFull bf.Echo.ov full Full: $*;
> ^Assign bv.ms.OVNickkill bf.Echo.ov nickkill NickKill: $*;
> ^Assign bv.ms.OVMsg bf.Echo.ov msg Msg: $*;
> ^Assign bv.ms.OVBadUserName bf.Echo.ov badusername $*;
> ^Assign bv.ms.OVClient bf.Echo.ov client $*;
> ^Assign bv.ms.OVBogus bf.Echo.ov bogus Bogus: $*;


/* key bindings
   ------------ */
@ bv.k.Ctrl.A = [Beginning_Of_Line];
@ bv.k.Ctrl.B = [Self_Insert];
@ bv.k.Ctrl.C = [Quit_Irc];
@ bv.k.Ctrl.D = [Parse_Command bc.AutoMsg 1];
@ bv.k.Ctrl.E = [End_Of_Line];
@ bv.k.Ctrl.F = [Parse_Command bf.Show.WhoLeft];
@ bv.k.Ctrl.G = [Self_Insert];
@ bv.k.Ctrl.H = [Backspace];
@ bv.k.Ctrl.I = [Parse_Command bc.Completion Cycle 1];
@ bv.k.Ctrl.J = [Send_Line];
@ bv.k.Ctrl.K = [];
@ bv.k.Ctrl.L = [Refresh_Screen];
@ bv.k.Ctrl.M = [Send_Line];
@ bv.k.Ctrl.N = [Parse_Command bc.AutoNetScape];
@ bv.k.Ctrl.O = [Send_Line];
@ bv.k.Ctrl.P = [Previous_Window];
@ bv.k.Ctrl.Q = [Quote_Character];
@ bv.k.Ctrl.R = [Parse_Command bc.InviteLast];
@ bv.k.Ctrl.S = [Toggle_Stop_Screen];
@ bv.k.Ctrl.T = [Transpose_Characters];
@ bv.k.Ctrl.U = [Erase_Line];
@ bv.k.Ctrl.V = [Self_Insert];
@ bv.k.Ctrl.W = [Parse_Command bc.AutoWhoIs 1];
@ bv.k.Ctrl.X = [Switch_Channels];
@ bv.k.Ctrl.Y = [Yank_From_Cutbuffer];
@ bv.k.Ctrl.Z = [Parse_Command bc.StopIrc];
@ bv.k.Ctrl._ = [Self_Insert];
@ bv.k.Ctrl.Right_Bracket = [Shove_To_History];
@ bv.k.Nor.BackSpace = [BackSpace];

@      bv.k.Meta1.Escape = [Command_Completion];
@    bv.k.Meta1.LessThan = [Scroll_Start];
@ bv.k.Meta1.GreaterThan = [Scroll_End];

/* Alt-* */
@ bv.k.Meta1.A = [Scroll_Start];
@ bv.k.Meta1.B = [Backward_Word];
#@ bv.k.Meta1.C = [];
@ bv.k.Meta1.D = [Parse_Command bc.AutoMsg -1];
@ bv.k.Meta1.E = [Scroll_End];
@ bv.k.Meta1.F = [Forward_Word];
#@ bv.k.Meta1.G = [];
@ bv.k.Meta1.H = [Parse_Command bf.DelPrevWord];
#@ bv.k.Meta1.I = [];
#@ bv.k.Meta1.J = [];
#@ bv.k.Meta1.K = [];
@ bv.k.Meta1.L = [Parse_Command bc.AutoLynx];
#@ bv.k.Meta1.M = [];
@ bv.k.Meta1.N = [Scroll_Forward];
#@ bv.k.Meta1.O = [];
@ bv.k.Meta1.P = [Scroll_Backward];
@ bv.k.Meta1.Q = [Quote_Character];
#@ bv.k.Meta1.R = [];
#@ bv.k.Meta1.S = [];
#@ bv.k.Meta1.T = [];
#@ bv.k.Meta1.U = [];
#@ bv.k.Meta1.V = [];
@ bv.k.Meta1.W = [Parse_Command bc.AutoWhoIs -1];
#@ bv.k.Meta1.X = [];
#@ bv.k.Meta1.Y = [];
#@ bv.k.Meta1.Z = [];
@ bv.k.Meta1.Backspace = [Delete_Previous_Word];
@ bv.k.Meta1.Tab       = [Parse_Command bc.Completion Normal 1];
@ bv.k.Meta1.Minus     = [Parse_Command bc.OtherWindow];

@ bv.k.Meta1.1 = [Parse_Command bc.WinShow 1];
@ bv.k.Meta1.2 = [Parse_Command bc.WinShow 2];
@ bv.k.Meta1.3 = [Parse_Command bc.WinShow 3];
@ bv.k.Meta1.4 = [Parse_Command bc.WinShow 4];
@ bv.k.Meta1.5 = [Parse_Command bc.WinShow 5];
@ bv.k.Meta1.6 = [Parse_Command bc.WinShow 6];
@ bv.k.Meta1.7 = [Parse_Command bc.WinShow 7];
@ bv.k.Meta1.8 = [Parse_Command bc.WinShow 8];
@ bv.k.Meta1.9 = [Parse_Command bc.WinShow 9];
@ bv.k.Meta1.0 = [Parse_Command bc.WinShow 10];

/* extra meta keys */
/* @ bv.k.Meta11.C = [Parse_Command $${[$winnam()]==[main]?[. Parsekey Next_Window]:[]};> ^Window New hide;> ^Window Swap last];
 * @ bv.k.Meta11.K = [Parse_Command $${[$winnam()]==[main]?[. Parsekey Next_Window]:[]};bc.Wink];
 * @ bv.k.Meta11.N = [Parse_Command $${[$winnam()]==[main]?[. Parsekey Next_Window]:[]};> ^Window Next];
 * @ bv.k.Meta11.P = [Parse_Command $${[$winnam()]==[main]?[. Parsekey Next_Window]:[]};> ^Window Previous];
 */

/* Arrow keys */
@  bv.k.Nor.Left = [Backward_Character];
@ bv.k.Nor.Right = [Forward_Character];
@    bv.k.Nor.Up = [Backward_History];
@  bv.k.Nor.Down = [Forward_History];

/* Function keys 1-5 */
@ bv.k.Nor.F1 = [Parse_Command bf.AutoReply2 1 -];
@ bv.k.Nor.F2 = [Parse_Command bf.AutoReply2 -1 -];
@ bv.k.Nor.F3 = [Parse_Command bf.AutoReply2 1 msg];
@ bv.k.Nor.F4 = [Parse_Command bf.AutoReply2 -1 msg];
@ bv.k.Nor.F5 = [];

/* Insert, Home, End, Delete, PageUp and PageDown */
@   bv.k.Nor.Insert = [Parse_Command ^ParseKey Toggle_Insert_Mode];
@     bv.k.Nor.Home = [Beginning_Of_Line];
@   bv.k.Nor.Delete = [Delete_Character];
@      bv.k.Nor.End = [End_Of_Line];
@   bv.k.Nor.Pageup = [Scroll_Backward];
@ bv.k.Nor.Pagedown = [Scroll_Forward];


/* load user settings
   ------------------ */
> Eval On ^Window "% File not found: *$mid(2 -1 $bv.f.Save)" @ bg.NoSaveFile = 1;
> Eval Load $bv.f.Save;
> Eval On ^Window -"% File not found: *$mid(2 -1 $bv.f.Save)";

